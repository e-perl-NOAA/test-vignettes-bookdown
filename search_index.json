[["index.html", "Stock Synthesis Vignettes Introduction to vignettes", " Stock Synthesis Vignettes Elizabeth Gugliotti 2023-06-14 Introduction to vignettes These vignettes are supplementary to the Stock Synthesis User Manual. For these vignettes, please download the executables from the most recent Stock Synthesis release. "],["predator.html", "Chapter 1 Predator Vignette 1.1 Introduction 1.2 Predator Setup", " Chapter 1 Predator Vignette Download the predator vignette files here. 1.1 Introduction The goal here is to model the overall natural mortality (M) to include explicit mortality caused by predators. Please see the Predator Fleet Mortality section in the SS3 User Manual for more details. With this approach, \\(M = M1 + sum(M2)\\). The M1 is the base and is modeled with the existing M options to allow for various approaches to age-specific M. 1.2 Predator Setup 1.2.1 Basic Predator Setup There can be multiple predators, each adding a M2. These are contained in the same arrays as fishing fleets (see line X of the data file, section 7.6.0.1 Fleet type in Fleet Definitions, and Predator Fleets), so M2 has available all the code characteristics as a fishing fleet. Very little code is specific to predators. 1.2.2 Further Predator Setup Each predator will have selectivity (age and/or length) just as any other fleet. Each predator will kill fish. \\(M2(f)/Z\\) is the fraction of the total kill that is consumed by the predator (f). Retained catch is not entered for predator fleets, nor is there a need to enter placeholder values. Consumption by predators is stored in the discard arrays. Therefore data on the amount of consumption can be entered as discard data, where SS3 will include it in the estimation of M2 values. The abundance of the predator is the “fishing effort” that drives the level of M2. If predator abundance is available, it can be entered as a survey of “F”. The format for this looks like: #_Units: 0=numbers; 1=biomass; 2=F; 30=spawnbio; …… #_Errtype: -1=normal; 0=lognormal; &gt;0=T #_SD_Report: 0=no sdreport; 1=enable sdreport #_Fleet Units Errtype SD_Report 1 1 0 0 # fishing_fleet 2 2 0 0 # pred This will trigger the need to specify a catchability for this fleet in the control file. *Note: At this time, specific catchability (e.g. consumption/predator) options are not available for predators, but they could be developed in the future. Neither consumption data or predator abundance data is necessary, but they are both helpful in tuning the level and time-variation of M2. If diet data with size or age composition of the prey is available, it can be entered in the composition data section (link to the Length Composition Data and Age Composition sections of the SS3 User Manual) where it will inform the estimation of the age/length selectivity of the predator for this prey. Input of consumption amount in biomass or numbers Input predator abundance as a “survey” of effort Functional form to relate “F” by the predator to the predator abundance composition data is from gut contents, so there can be multiple predators (needs testing). M2 has a random deviation over time to allow time-varying flexibility. Then we add data to inform those deviations. In this example, those data are consumption entered as discard data (link to the Discard section of the SS3 User Manual). An alternative is to enter an indicator (e.g. survey) of the level of M2 itself (link to the Indices section of the SS3 User Manual). This is not done here but would be a survey of type 2. 1.2.3 Example The example has: 4 seasons and M2 can vary by season. 1.2.3.1 Data file: One fleet is type 4 labeled as Pred [Line X]. The fact that at least one fleet is a predator triggers the need to include M2 internal to the SS3 calculations. The section of discard data is used as a place to enter the amount of consumption [Line X]. This is not absolutely necessary, but it does help calibrate the M2 levels. 1.2.3.2 Control file: This example has a somewhat complex M1 pattern by age. This is independent of M2 so need not be maintained in your work. Setup M2 parameter [begins at line 106]:   The M2 parameter has both a block to shift its value in 1964, and annual deviations [lines X]. The M2 parameter is set up to have annual deviations in the seasonal values of M2 [lines X]. There are a lot of parameters. In this case it works because there is a discard observation for each one. It should still work without all that consumption data because it is a random effect, but let’s talk if you have challenges. Setup the size &amp; age selectivity of the predator for the prey: #_Pattern Discard Male Special 24 0 0 0 # 1 Fleet 24 3 0 0 # 2 Pred Notice that the discard flag is “3”. This means that for the predator fleet the data file contains no relevant “retained catch”, so the M2 level will only be informing the amount of “discard” which is the predator consumption. In this example, the selectivity of the predator was set up using double normal (type=24), but parameters were set to essentially be logistic. You can change this as needed. If you search through the report.sso file for “M2” you will find the parameter values near the top, the consumption output in the Discard section, and then will find the time series of M2 further down. Important Note: The discard label will appear in the plot below because predator consumption is stored internally in the same place as discards. See fig. (fig:pred-fig) ```r knitr::include_graphics(&quot;images/pred_image.png&quot;) ``` &lt;div class=&quot;figure&quot;&gt; &lt;img src=&quot;images/pred_image.png&quot; alt=&quot;fig caption&quot; /&gt; &lt;p class=&quot;caption&quot;&gt;(\\#fig:pred-fig)fig caption&lt;/p&gt; &lt;/div&gt; You can label chapter and section titles using {#label} after them, e.g., we can reference Chapter ??. If you do not manually label them, there will be automatic labels anyway, e.g., Chapter 3. Figures and tables with captions will be placed in figure and table environments, respectively. par(mar = c(4, 4, .1, .1)) plot(pressure, type = &#39;b&#39;, pch = 19) Figure 1.1: Here is a nice figure! Reference a figure by its code chunk label with the fig: prefix, e.g., see Figure 1.1. Similarly, you can reference tables generated from knitr::kable(), e.g., see Table 1.1. knitr::kable( head(iris, 20), caption = &#39;Here is a nice table!&#39;, booktabs = TRUE ) Table 1.1: Here is a nice table! Sepal.Length Sepal.Width Petal.Length Petal.Width Species 5.1 3.5 1.4 0.2 setosa 4.9 3.0 1.4 0.2 setosa 4.7 3.2 1.3 0.2 setosa 4.6 3.1 1.5 0.2 setosa 5.0 3.6 1.4 0.2 setosa 5.4 3.9 1.7 0.4 setosa 4.6 3.4 1.4 0.3 setosa 5.0 3.4 1.5 0.2 setosa 4.4 2.9 1.4 0.2 setosa 4.9 3.1 1.5 0.1 setosa 5.4 3.7 1.5 0.2 setosa 4.8 3.4 1.6 0.2 setosa 4.8 3.0 1.4 0.1 setosa 4.3 3.0 1.1 0.1 setosa 5.8 4.0 1.2 0.2 setosa 5.7 4.4 1.5 0.4 setosa 5.4 3.9 1.3 0.4 setosa 5.1 3.5 1.4 0.3 setosa 5.7 3.8 1.7 0.3 setosa 5.1 3.8 1.5 0.3 setosa You can write citations, too. For example, we are using the bookdown package (Xie 2023) in this sample book, which was built on top of R Markdown and knitr (Xie 2015). References "],["settlement.html", "Chapter 2 Settlement Timing Vignette 2.1 Example 1: December spawning, January settlement 2.2 Example 2: January spawning, January settlement 2.3 Example 3: January spawning, March settlement 2.4 Example 4: March spawning 2.5 Example 5: February spawning, May settlement (OK if split across seasons) 2.6 Example 6: February spawning, January settlement of following year at age 1", " Chapter 2 Settlement Timing Vignette Download the settlement vignette files here. Settlement timing in SS3 can be used simply, but there is a rich range of options to provide a high degree of flexibility to cover edge cases. Spawning - There is one and only one spawning event in each year. It is assigned a real valued spawn_month (in the data.ss file) and the numbers-at-age (NAA) at the time of spawning are decayed to that date according to \\[exp(-(M+F))\\] from the start date of the season this date occurs in. Settlement - There can be one to many settlement events (specified in the control.ss file) and the total recruits \\[exp(ln_R0))\\]are distributed among these events according to the recruitment distribution pattern and associated distribution parameters. Each settlement event is characterized by: Growth pattern (line x in x file)- which set of biological parameters apply to this partition of the total recruits Settlement month (line x in x file) - in real months, so 1.0 means January 1 and 4.5 means settlement on April 15 Settlement area (line x in x file) - in which area is this settlement occurring Settlement age (line x in x file) - SS3 expects that settlement age is 0 if in the same year as spawning and 1 if in the following year. The settlement age entry allows this to be overridden by the user. The calendar age of the recruits is a real number which equals “settlement age” on January 1 of the spawning year (even if spawning happens later in the year). If settlement age is greater than 0, then settlement month needs to be adjusted in 12 month increments to align with that advanced age at settlement. Note that instructions in the SS3 manual need updating as a result of this discovery. Below are a set of examples with a strong recruitment (recdev = 2.0) resulting from the 1977 spawning, hence named Main_RecrDev_1977. The various examples will show how this interacts with the settlement event setup. 2.1 Example 1: December spawning, January settlement A common setup will have spawning late in one year (here December 1, or month 12.0) and one settlement event at age 0 on January 1. 12 #_spawn_month #GPattern month area age (for each settlement assignment) 1 1 1 0 In the spawn_recruitment output table, this results in 61154.1 thousand recruits from the 1977 spawning. Yr SpawnBio exp_recr with_regime bias_adjusted pred_recr dev 1977 75541.9 9908.54 9908.54 8276.31 61154.1 2.0 In the NAA table, these recruits are split to be 30577.1 NAA 0 in 1978 for each of females and males. They appear in 1978 as age 0 fish because their settlement month (1.0) is earlier than their spawn month (12.0), so settlement must be in the year following spawning. SS3 produces this note in warnings.sso: Note 3 Information: settle_month is less than spawn_month, so logical age at settlement is calculated to be: 1 for settle_time 1. Does not match read value of 0 are you sure? Switching settlement age to 1 resolves the warning and now the fish first appear in NAA as age 1 fish in 1978. Age 0 fish never appear in the NAA table with this configuration. 2.2 Example 2: January spawning, January settlement Shift spawning to occur on January 1 and virtual recruitment at the same time, 1.0. Spawning biomass is higher on January 1 of 1977 than December 1 of 1977, as a result the recruitment is higher (note that the model was not re-estimated to allow for ln_R0 to come into alignment with the spawn month). Yr SpawnBio exp_recr with_regime bias_adjusted pred_recr dev 1977 80997 9935.39 9935.39 8298.73 61319.8 2.0 These fish appear in the NAA table in 1977, not 1978 because the settlement date (1.0) is not smaller than the spawning date (also 1.0). 2.3 Example 3: January spawning, March settlement Spawning on January 1 and settlement on March 1 (month 3.0). Spawn_recr table shows recruits in 1977 as 61328.1 which will be 30664.05 per sex. These fish appear in the NAA table in 1977 at age 0. They have elevated numbers (31179.4) because the table contains their numbers at the beginning of the season inflated by \\[exp(M*deltaT)\\] , whereas ln_R0 references their numbers at the time of settlement, which is 2 months later. 2.4 Example 4: March spawning Spawning on March 1 and settlement on March 15 at age 0. This is an non-allowed configuration because the recruits must be backed up to the beginning of the season (January 1) where they potentially could be part of the spawning biomass of March 1 that produced them. SS3 produces this warning: Warning 1 Fatal Error! Cannot have spawn_time_seas after beginning of a season and settlements in the same season. Put spawning at beginning of the season, or move settlements to next season Spawning on March 1 and settlement on February 1 at age 0. Note 3 Information: settle_month is less than spawn_month, so logical age at settlement calculated to be: 1 for settle_time 1. Does not match read value of 0 are you sure? Spawning on March 1 and settlement on February 1 at age 1. No warning is produced. The big year-class shows up in NAA at age 1 in 1978. 2.5 Example 5: February spawning, May settlement (OK if split across seasons) Spawning on February 1 and settlement on May 1 at age 0, with 2 seasons (January-March, April-December). This is legal because the May 1 settlement now is just backed up to April 1 which is after the spawning event that occurred in the previous season. 2.6 Example 6: February spawning, January settlement of following year at age 1 Here, the big 1977 recruitment will show up in the NAA table at age 1 in the following year, 1978. If spawning had been set to month 1.0, then SS3 would allow the January 1 settlement at age 1 to occur in 1977 also. This is a year off and illogical. However, with spawning at month 1.0, settlement at month 13.0, and settlement age at 1.0, then the big recruitment correctly shows up in 1978 at age 1. So, it is critical to think about the timing of spawning relative to settlement and to check results in the NAA table. Example set-up #3: A single recruitment event is now split among 3 events happening in April, May and June; all with the same growth parameters. Previously, the data indicated that the CV of length-at-age for young fish was rather larger. But that conclusion was linked to the assumption that all the recruits were exactly the same age. In the revised setup, the recruits now have a spread of age since settlement, so at a point in time they will have a spread of lengths. Consequently, it is expected that the CV parameter for young fish can be less when recruits are distributed among a spread of temporal settlement events. Example set-up #4: Spawning is in October and recruitment occurs with two settlement events. One settlement is in December and the settlement age is 0. The other settlement is in February and the settlement age is 1. The first settlement will graduate to age 1 on January 1, so by February when the second settlement occurs, they both will appear as the same integer age. The total number of recruits is scaled by the parameter ln_R0. Even when this total is divided among morphs, sexes, and settlement events at different times, the total of all those settlement events will be equal to \\[exp(ln_R0)\\]. However, settlers are always added at the beginning of a season because they will experience mortality throughout the season. This means that when a settlement event happens not at the beginning of a season, its initial numbers are adjusted upwards such that after in-season mortality occurs its numbers at the assigned time of settlement will be correct. This is a benign process if only natural mortality is acting on the pre-settlement fish. However, if fishing mortality is also active, then it would be better to create more seasons such that the settlement event could then occur at the beginning of a season and have its fishing mortality more explicitly under control. For the purpose of growth calculation, fish have a real_age of 0.0 at the time of settlement, so each settlement timing has a unique starting point for real_age, unlike calendar_age which is relative to January 1 of the spawn year. All fish graduate to the next integer age on January 1. real_age is used as the basis for growth, and for some types of age-specific natural mortality. This means that when fish of the same growth pattern are distributed among more than one settlement timing, the early born fish have a head start in the growth process, but since they are all growing towards the same maximum size, they gradually converge in growth. Conceptually, the time between spawning and settlement is a larval phase that is post spawner-recruitment and pre-settlement. They are in a planktonic limbo until settling. Where, when, and what growth type they have upon settlement is controlled by the recruitment distribution. Then upon settling, the juvenile fish begin growing according to adult growth parameters and enter exposure to explicit natural and fishing mortality. Growth - Fish begin growing according to the growth curve when they reach the real_age equal to the user-assigned quantity, Amin. At the real_age=Amin, fish have the mean body length of Lmin. Amin is in terms of real_age post-settlement, not calendar_age post January 1 of the spawning year. Amin can have a value of 0.0, especially if the time of settlement is several months post-spawning. If Amin &gt; 0.0, then size-at-age of fish is assigned according to a linearly interpolated fraction of Lmin. If you are using age-specific K, then the integer age measured starting from the spawn year is used to select an age-specific K change. Growth parameters - If you have growth parameters calculated externally to SS3, they probably are relative to age being measured in terms of calendar age, not real-age post settlement. The growth K and Lmax parameters will be unaffected, but Lmin very much depends on the shifting along the age axis. "],["methods.html", "Chapter 3 Methods 3.1 math example", " Chapter 3 Methods We describe our methods in this chapter. Math can be added in body using usual syntax like this 3.1 math example \\(p\\) is unknown but expected to be around 1/3. Standard error will be approximated \\[ SE = \\sqrt(\\frac{p(1-p)}{n}) \\approx \\sqrt{\\frac{1/3 (1 - 1/3)} {300}} = 0.027 \\] You can also use math in footnotes like this1. We will approximate standard error to 0.0272 where we mention \\(p = \\frac{a}{b}\\)↩︎ \\(p\\) is unknown but expected to be around 1/3. Standard error will be approximated \\[ SE = \\sqrt(\\frac{p(1-p)}{n}) \\approx \\sqrt{\\frac{1/3 (1 - 1/3)} {300}} = 0.027 \\]↩︎ "],["applications.html", "Chapter 4 Applications 4.1 Example one 4.2 Example two", " Chapter 4 Applications Some significant applications are demonstrated in this chapter. 4.1 Example one 4.2 Example two "],["final-words.html", "Chapter 5 Final Words", " Chapter 5 Final Words We have finished a nice book. "],["references.html", "References", " References "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
